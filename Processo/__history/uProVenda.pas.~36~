unit uProVenda;

interface

uses
  Winapi.Windows,
  Winapi.Messages,
  System.SysUtils,
  System.Variants,
  System.Classes,
  Vcl.Graphics,
  Vcl.Controls,
  Vcl.Forms,
  Vcl.Dialogs,
  UTelaHeranca,
  Data.DB,
  ZAbstractRODataset,
  ZAbstractDataset,
  ZDataset,
  Vcl.DBCtrls,
  Vcl.Grids,
  Vcl.DBGrids,
  Vcl.StdCtrls,
  Vcl.Buttons,
  Vcl.Mask,
  Vcl.ExtCtrls,
  Vcl.ComCtrls,
  UDTMConexao,
  UDTMVenda,
  UEnum,
  UVenda,
  RxCurrEdit,
  RxToolEdit;

type
  TfrmProVenda = class( TfrmTelaHeranca )
    QryListagemvendaId: TIntegerField;
    QryListagemclienteId: TIntegerField;
    QryListagemnome: TWideStringField;
    QryListagemdataVenda: TDateTimeField;
    QryListagemtotalVenda: TFloatField;
    EdtVendaId: TLabeledEdit;
    LookUpCliente: TDBLookupComboBox;
    LblNomeCliente: TLabel;
    EdtDataVenda: TDateEdit;
    LblDataVenda: TLabel;
    Panel1: TPanel;
    Panel2: TPanel;
    Panel3: TPanel;
    Panel4: TPanel;
    EdtValor: TCurrencyEdit;
    LblValorVenda: TLabel;
    DBGridItensVenda: TDBGrid;
    LookUpProduto: TDBLookupComboBox;
    LblProdutos: TLabel;
    EdtQuantidade: TCurrencyEdit;
    LblQuantidade: TLabel;
    EdtValorUnitario: TCurrencyEdit;
    CurrencyEdit2: TCurrencyEdit;
    LblVlrUnitario: TLabel;
    LblVlrTotalProduto: TLabel;
    BtnAdicionar: TBitBtn;
    BtnRemover: TBitBtn;
    procedure FormCreate( Sender: TObject );
    procedure FormClose( Sender: TObject; var Action: TCloseAction );
    procedure DBGridItensVendaKeyDown( Sender: TObject; var Key: Word;
                Shift: TShiftState );
    procedure BtnAlterarClick( Sender: TObject );
    procedure BtnNovoClick( Sender: TObject );
  private
    { Private declarations }
    DtmVenda: TDTMVenda;
    Venda: TVenda;
    function Gravar( Status: TEstadoCadastro ): Boolean; override;
    function Excluir: Boolean; override;
  public
    { Public declarations }
  end;

var
  FrmProVenda: TfrmProVenda;

implementation

{$R *.dfm}


function TfrmProVenda.Excluir: Boolean;
begin
  Result := Venda.Excluir( QryListagem.FieldByName( 'vendaId' ).AsInteger );
end;

function TfrmProVenda.Gravar( Status: TEstadoCadastro ): Boolean;
begin
  if EdtVendaId.Text <> EmptyStr then
    Venda.VendaID := StrToInt( EdtVendaId.Text )
  else
    Venda.VendaID := 0;

  Venda.ClienteId  := LookUpCliente.KeyValue;
  Venda.DataVenda  := EdtDataVenda.Date;
  Venda.TotalVenda := EdtValor.Value;

  if Status = EcInserir then
    Result := Venda.Inserir
  else if Status = EcAlterar then
    Result := Venda.Atualizar;
end;

procedure TfrmProVenda.BtnAlterarClick( Sender: TObject );
begin
  if Venda.Selecionar( QryListagem.FieldByName( 'vendaId' ).AsInteger ) then
  begin
    EdtVendaId.Text        := IntToStr( Venda.VendaID );
    LookUpCliente.KeyValue := Venda.ClienteId;
    EdtDataVenda.Date      := Venda.DataVenda;
    EdtValor.Value         := Venda.TotalVenda;
  end
  else
  begin
    BtnCancelar.Click;
    Abort;
  end;

  inherited;
end;

procedure TfrmProVenda.BtnNovoClick( Sender: TObject );
begin
  inherited;
  EdtDataVenda.Date := Date;
  LookUpCliente.SetFocus;
end;

procedure TfrmProVenda.DBGridItensVendaKeyDown( Sender: TObject; var Key: Word;
            Shift: TShiftState );
begin
  inherited;
  BloqueiaCTRL_DEL_DBGrid( Key, Shift );
end;

procedure TfrmProVenda.FormClose( Sender: TObject; var Action: TCloseAction );
begin
  inherited;
  if Assigned( DtmVenda ) then
    FreeAndNil( DtmVenda );

  if Assigned( Venda ) then
    FreeAndNil( Venda; )
end;

procedure TfrmProVenda.FormCreate( Sender: TObject );
begin
  inherited;
  DtmVenda := TDtmVenda.Create( Self );
end;

end.
